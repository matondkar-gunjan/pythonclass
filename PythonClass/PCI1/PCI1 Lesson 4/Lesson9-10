#Pygame - template - skeleton for a new pygame project
import pygame
import random
from os import path
#img_dir = path.join(path.dirname(__file__), 'image_folder')




#Constant for Screen Width, Height and FPS
WIDTH = 480
HEIGHT = 600
FPS = 60

#Define colors
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
RED = (255, 0, 0 )
GREEN = (0, 255, 0)
BLUE = (0, 0, 255)
YELLOW = (255, 255, 0)

#Initialise pygame and create window
pygame.init()

#Enable sound effects in game 
pygame.mixer.init()
screen = pygame.display.set_mode((WIDTH, HEIGHT))

#Set the caption of the screen
pygame.display.set_caption("Space explorers")


#Set speed of the game
clock = pygame.time.Clock()

#background = pygame.image.load(path.join(img_dir, 'background.png')).convert_alpha( ) 
background_rect = background.get_rect( )

player_img = pygame.image.load(path.join(img_dir,"playerShip1_red.png")).convert_alpha( )
meteor_img = pygame.image.load(path.join(img_dir,"meteorGrey_med1.png")).convert_alpha( )
bullet_img = pygame.image.load(path.join(img_dir,"laserBlue01.png")).convert_alpha( )

meteor_images = []
meteor_list = ['meteorGrey_big1.png', 'meteorGrey_big2.png', 'meteorGrey_med1.png', 'meteorGrey_med2.png', 'meteorGrey_small1.png', 'meteorGrey_small2.png', 'meteorGreytiny1.png']

for img in meteor_list:
  meteor_images.append(pygame.image.load(path.join(img_dir,img)).convert_alpha())

#Create our player class
class Player(pygame.sprite.Sprite):
  def __init__(self):
    pygame.sprite.Sprite.__init__(self)
    
    self.image = pygame.transform.scale(player_img, (50, 38)
    self.image.get_rect()
    self.radius = 20
    Pygame.draw.circle(self.image, RED, self.rect.center, self.radius)
 
    self.rect.centerx = WIDTH / 2
    self.rect.bottom = HEIGHT - 10
    self.speedx = 0
    
  
  def update(self):
    self.speedx = 0
    
    keystate = pygame.key.get_pressed()
    if keystate[pygame.K_LEFT]:
      self.speeds =  -5
    if keystate[pygame.K_RIGHT]:
      self.speeds = 5

    self.rect.x += self.speedx
      
    if self.rect.right > WIDTH:
      self.rect.right = WIDTH
    if self.rect.left < 0:
      self.rect.right = 0

  def shoot(self):
    bullet = Bullet(self.rect.centerx, self.rect.top)
    all_sprites.add(bullet)
    bullets.add(bullet)
    
bullets = pygame.sprite.Group()

#Create our mob class
class Mob(pygame.sprite.Sprite):
  def __init__(self):
    pygame.sprite.Sprite.__init__(self)
    self.image_orig = random.choice(meteor_images)
    self.image = self.image_orig.copy()

    self.rect= self.image.get_rect()
    self.rectx = random.randrange(WIDTH - self.rect.width)    
    self.recty = random.randrange(-100, -40)
    self.speedy = random.randrange(1,8)
    self.speedx = random.randrange(-3, 3)

    self.radius = int(self.rect.witdth * 0.95 / 2)
    Pygame.draw.circle(self.image, RED, self.rect.center, self.radius)

      self.rot_speed = 0

      self.rot_speed = random.randrange(-8, 8)
      self.last_update = pygame.time.get_ticks()

   def rotate(self):
      now = pygame.time.get_ticks()
      if now - self.last_update > 50:
         self.last_update = now 

         
       self.rot = (self.rot + self.rot_speed) % 360


         # Make meteor rotate around the same center
         old_center = self.rect.center
         self.image = pygame.transform.rotate(Self.image_orig, self.rot)

         self.rect = self.image.get_rect()

         self.rect.center = old_center

  def update(self):

    self.rect.y += self.speedy
    self.rect.x += self.speedy
    self.rotate()

    if self.rect.top > HEIGHT + 10:
      self.rect.x = random.randrange(WIDTH = self.rect.width)
      self.rect.y = random.range(-100, -40)
      self.speedy = random.range(1, 8)

Class bullet(pygame.sprite.Sprite):
  def __init__(self, x, y):
    pygame.sprite.Sprite.__init__(self)
    self.image = pygame.transform.scale(bullet_img, (10,20))
    
    self.rect = self.image.get_rect()
    self.rect.bottom = y
    self.rect.center = x
    self.speedy = -10

def update(self):
  self.rect.y += self.speedy
  
  if self.rect.bottom < 0:
    self.kill


#A sprite group is just a collection of sprites
that you can act on all at the same time
all_sprites = pygame.sprite.Group()
mobs = pygame.sprite.Group()
bullets = pygame.sprite.Group()

player = Player()
all_sprites.add(player)

all_sprites.update()

for i in range(8):
  m = Mob()
  all_sprites.add(m)
  mobs.add(m)


#Game loop
running = True

while running:
  
  #Keep loop running at the same speed
  clock.tick(FPS)

  #Process input (events)
  for event in pygame.event.get():

    #Check for closing window
    if event.type == pygame.QUIT:
      running = False

    elif event.type == pygame.KEYDOWN:
      if event.key == pygame.K_SPACE:
        player.shoot()

  hits = pygame.sprite.groupcollide(player, mobs, False, pygame.sprite.collide_circle)

  for hit in hits:
     m = Mob()
     all_sprites.add(m)
     mobs.add(m)
  

  

  #Update function : Add in the update portion
  #Update
  all_sprites.update()

  hits = pygame.sprite.spritecollide(player, mobs, False)
  if hits:
    running = False

  

  #Drawing/Rendering
  screen.fill(BLACK)

  #Blit the sprites images
  all_spirtes.draw(screen)
  pygame.display.flip()

#Close the game
pygame.quit()
